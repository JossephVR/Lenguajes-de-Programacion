package main      //Josseph Valverde Robles

import "fmt"

type producto struct {
	nombre   string
	cantidad int
	precio   int
}
type listaProductos []producto

var lProductos listaProductos

const existenciaMinima int = 10 //la existencia mínima es el número mínimo debajo de el cual se deben tomar eventuales desiciones

func (l *listaProductos) agregarProducto(nombre string, cantidad int, precio int) {

	var uniform int = l.buscarProducto(nombre)

	if uniform == -1 {

		lProductos = append(lProductos, producto{nombre: nombre, cantidad: cantidad, precio: precio})

	} else {

		var foxtrot int

		for foxtrot = 0; foxtrot < len(*l); foxtrot++ {

			if (*l)[foxtrot].nombre == nombre {

				(*l)[foxtrot].cantidad = (*l)[foxtrot].cantidad + cantidad
			}
		}
	}

	// modificar el código para que cuando se agregue un producto, si este ya se encuentra, incrementar la cantidad
	// de elementos del producto y eventualmente el precio si es que es diferente
}

func (l *listaProductos) buscarProducto(nombre string) int { //el retorno es el índice del producto encontrado y -1 si no existe
	var result = -1
	var i int
	for i = 0; i < len(*l); i++ {
		if (*l)[i].nombre == nombre {
			result = i
		}
	}
	return result
}

func (l *listaProductos) aumentarInventarioDeMinimos() { //funcion que revisa el inventario de productos
	//y en aquellos en los la cantidad sea menor a la existencia mínima, realiza
	//compras hasta que se alcanze este número

	var a int

	for a = 0; a < len(*l); a++ {

		if (*l)[a].cantidad < existenciaMinima {

			var lima int = (*l)[a].cantidad

			for lima < existenciaMinima {

				l.agregarProducto((*l)[a].nombre, 1, (*l)[a].precio)

				lima = (*l)[a].cantidad

			}
		}
	}

}

func (l *listaProductos) venderProducto(nombre string) {
	var prod = l.buscarProducto(nombre)
	if prod != -1 {
		(*l)[prod].cantidad = (*l)[prod].cantidad - 1
		//modificar para que cuando no haya existencia de cantidad de productos, el producto se elimine de "la lista" y notificar
	}
}
func llenarDatos() {
	lProductos.agregarProducto("arroz", 15, 2500)
	lProductos.agregarProducto("frijoles", 4, 2000)
	lProductos.agregarProducto("leche", 8, 1200)
	lProductos.agregarProducto("café", 12, 4500)
}

func (l *listaProductos) listarProductosMínimos() listaProductos {
	// debe retornar una nueva lista con productos con existencia mínima

	var juliet int = 0

	var lProductos2 listaProductos

	for juliet < len(*l) {

		if (*l)[juliet].cantidad == existenciaMinima {

			lProductos2 = append(lProductos2, (*l)[juliet])
		}

		juliet++

	}

	return lProductos2

}

func main() {
	llenarDatos()
	fmt.Println(lProductos)

	lProductos.aumentarInventarioDeMinimos()

	fmt.Println(lProductos)

	lProductos.listarProductosMínimos()

	fmt.Println(lProductos)

}
